<?xml version='1.0' encoding='UTF-8'?>
<testcases>
<testcase id="eng.sa.1" type="bloquant">
  <call-parameters>
      <param key="text" value="The little cat is black."/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>ADJPRENSUB</expl>
 <test id="eng.sa.1.1" trace=".sa.xml"
    comment=" rules-r2l-pass1-eng-homodeps.txt, AdjPrenSub : la chaine nominale 'little cat' doit exister."
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='little']/dependents/dep[@t='ADJPRENSUB']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.3" type="bloquant">
  <call-parameters>
      <param key="text" value=" The actor John was the friend and companion of the director. "/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>ADJPRENSUB  </expl>
<test id="eng.sa.3.1" trace=".sa.xml"
    comment=" rules-r2l-pass1-eng-homodeps.txt, La relation ADJPRENSUB doit exister entre 'John' et 'actor' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='actor']/dependents/dep[@t='ADJPRENSUB']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.5" type="bloquant">
  <call-parameters>
      <param key="text" value="The car is beautiful. "/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>det</expl>
<test id="eng.sa.5.1" trace=".sa.xml"
    comment=" rules-eng-homodeps-pass1.txt. The det relation must be present between 'The' and 'car'."
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='The']/dependents/dep[@t='det']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.6" type="bloquant">
  <call-parameters>
      <param key="text" value="The very beautiful tall location. "/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>det</expl>
<test id="eng.sa.6.1" trace=".sa.xml"
    comment=" rules-eng-homodeps-pass1.txt. La relation det doit exister entre 'The' et 'house' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='The']/dependents/dep[@t='det']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.7" type="bloquant">
  <expl> - contenu test modifié : l'ambiguite NC/Adj de little fait choisir une mauvaise interprétation en Freq ; remplacé par sombre</expl>
  <call-parameters>
      <param key="text" value="The very beautiful dark location. "/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>det</expl>
  <test id="eng.sa.7.1" trace=".sa.xml"
    comment=" rules-eng-homodeps-pass1.txt. La relation det doit exister entre 'The' et 'house'. "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='The']/dependents/dep[@t='det']"
    operator="exists"
    right="" />
  <test id="eng.sa.7.2" trace=".sa.xml"
    comment=" rules-eng-homodeps-pass1.txt. La relation ADJPRENSUB doit exister entre les adjectifs et 'house'. "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='beautiful']/dependents/dep[@t='ADJPRENSUB']"
    operator="exists"
    right="" />
  <test id="eng.sa.7.3" trace=".sa.xml"
    comment=" rules-eng-homodeps-pass1.txt. La relation det doit exister entre adjectifs et 'house'. "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='dark']/dependents/dep[@t='ADJPRENSUB']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.8" type="bloquant">
  <call-parameters>
      <param key="text" value="This house is the prettiest in the neighborhood. "/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>COMPADJ</expl>
<test id="eng.sa.8.1" trace=".sa.xml"
    comment=" rules-eng-homodeps-pass1.txt. La relation COMPADJ doit exister entre 'la' et 'quartier' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='neighborhood']/dependents/dep[@t='COMPADJ']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.9" type="bloquant">
  <call-parameters>
      <param key="text" value="This house is the prettiest in the street. "/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>COMPADJ</expl>
<test id="eng.sa.9.1" trace=".sa.xml"
     comment=" rules-eng-homodeps-pass1.txt. La relation COMPADJ doit exister entre 'prettiest' et 'street' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='street']/dependents/dep[@t='COMPADJ']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.11" type="bloquant">
  <call-parameters>
      <param key="text" value="This house is the one of the more unpleasant in the street. "/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>ADVADJ</expl>
<test id="eng.sa.11.1" trace=".sa.xml"
     comment=" rules-eng-homodeps-pass1.txt. La relation ADVADJ doit exister entre 'most' et 'unpleasant' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='more']/dependents/dep[@t='ADVADJ']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.12" type="bloquant">
  <call-parameters>
      <param key="text" value="This house is really very beautiful. "/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>ADVADJ</expl>
<test id="eng.sa.12.1" trace=".sa.xml"
     comment=" rules-eng-homodeps-pass1.txt. La relation ADVADJ doit exister entre 'very ' et 'beautiful' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='very']/dependents/dep[@t='ADVADJ']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.13" type="bloquant">
  <call-parameters>
      <param key="text" value="his house is really very beautiful. "/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>ADVADV</expl>
<test id="eng.sa.13.1" trace=".sa.xml"
     comment=" rules-eng-homodeps-pass1.txt. La relation ADVADV doit exister entre 'really ' et 'very' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='really']/dependents/dep[@t='ADVADV']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.14.a" type="bloquant">
  <call-parameters>
      <param key="text" value="In what year did John Hancock die ? "/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>det</expl>
<test id="eng.sa.14.1" trace=".sa.xml"
     comment=" rules-eng-homodeps-pass1.txt. La relation det doit exister entre 'what' et 'year' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='what']/dependents/dep[@t='det']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.14.b" type="bloquant">
  <call-parameters>
      <param key="text" value="In what year did John Hancock die ? "/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>det</expl>
<test id="eng.sa.14.2" trace=".sa.xml"
     comment=" rules-eng-homodeps-pass1.txt. La relation det doit exister entre 'what' et 'year' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='what']/dependents/dep[@t='det']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.15.a" type="bloquant">
  <call-parameters>
      <param key="text" value="In what year did John Hancock die ? "/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>PrepDetInt</expl>
<test id="eng.sa.15.1" trace=".sa.xml"
     comment=" rules-eng-homodeps-pass1.txt. La relation PrepDetInt doit exister entre 'In' et 'what' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='In']/dependents/dep[@t='PrepDetInt']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.15.b" type="bloquant">
  <call-parameters>
      <param key="text" value="At what date did the accident happen? "/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>PrepDetInt</expl>
<test id="eng.sa.15.2" trace=".sa.xml"
     comment=" rules-eng-homodeps-pass1.txt. La relation PrepDetInt doit exister entre 'à' et 'what' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='At']/dependents/dep[@t='PrepDetInt']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.16" type="bloquant">
  <call-parameters>
      <param key="text" value="This is not the first time that he has visited Lisbon."/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>Compound tense handled using an 'aux' dependency between the auxiliary and the past participle.</expl>
  <test id="eng.sa.16.1" trace=".sa.xml"
      comment="rules-eng-homodeps-pass1.txt. There must be an 'aux' dependency between 'has' and 'visited'"
      left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='has']/dependents/dep[@t='aux']"
      operator="exists"
      right="" />
  <test id="eng.sa.16.2" trace=".sa.xml"
      comment="rules-eng-homodeps-pass1.txt. There must be an 'aux' dependency between 'has' and 'visited'"
      left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='has']/dependents/dep/@v"
      operator="="
      right="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='visited']/@id" />
</testcase>
<testcase id="eng.sa.17" type="bloquant">
  <call-parameters>
      <param key="text" value="This is not the first time that he has perfunctorily visited Lisbon."/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>Compound tense handled using an 'aux' dependency between the auxiliary and the past participle, even with an adverbial modifier.</expl>
  <test id="eng.sa.17.1" trace=".sa.xml"
      comment="rules-eng-homodeps-pass1.txt. There must be an 'aux' dependency between 'has' and 'visited'"
      left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='has']/dependents/dep[@t='aux']"
      operator="exists"
      right="" />
  <test id="eng.sa.17.2" trace=".sa.xml"
      comment="rules-eng-homodeps-pass1.txt. There must be an 'aux' dependency between 'has' and 'visited'"
      left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='has']/dependents/dep/@v"
      operator="="
      right="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='visited']/@id" />
</testcase>
<testcase id="eng.sa.18" type="bloquant">
  <!-- Warning: "has accepted" should be handled as a compound tense -->
  <call-parameters>
      <param key="text" value="Has he accepted this decision??"/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>SujInv</expl>
<test id="eng.sa.18.1" trace=".sa.xml"
     comment=" rules-eng-homodeps-pass1.txt. La relation SujInv doit exister entre 'il' et 'accepte' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='he']/dependents/dep[@t='SujInv']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.22" type="bloquant">
  <call-parameters>
      <param key="text" value="He asked me to meet him at the corner."/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>PrepInf</expl>
<test id="eng.sa.22.1" trace=".sa.xml"
     comment=" rules-eng-homodeps-pass1.txt. La relation PrepInf doit exister entre 'to' et 'come' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='to']/dependents/dep[@t='PrepInf']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.23" type="bloquant">
  <call-parameters>
      <param key="text" value="He asked me to never meet him at the corner."/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>PrepInf</expl>
<test id="eng.sa.23.1" trace=".sa.xml"
     comment=" rules-eng-homodeps-pass1.txt. La relation PrepInf doit exister entre 'to' et 'meet' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='to']/dependents/dep[@t='PrepInf']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.24" type="bloquant">
  <call-parameters>
      <param key="text" value="She suggests that we all go to eat."/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>SUJ_V</expl>
<test id="eng.sa.24.1" trace=".sa.xml"
     comment=" rules-eng-homodeps-pass1.txt. La relation SUJ_V doit exister entre 'she' et 'suggests' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='She']/dependents/dep[@t='SUJ_V']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.25" type="bloquant">
  <call-parameters>
      <param key="text" value="I suggest that we all go to eat.."/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>SUJ_V</expl>
<test id="eng.sa.25.1" trace=".sa.xml"
     comment=" rules-eng-homodeps-pass1.txt. La relation SUJ_V doit exister entre 'I' et 'suggest' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='I']/dependents/dep[@t='SUJ_V']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.26" type="bloquant">
  <call-parameters>
      <param key="text" value="He got the men noisy. "/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>SUBADJPOST</expl>
<test id="eng.sa.26.1" trace=".sa.xml"
     comment=" rules-eng-homodeps-pass2.txt. La relation SUBADJPOST doit exister entre 'men' et 'ready' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='noisy']/dependents/dep[@t='SUBADJPOST']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.27" type="bloquant">
  <call-parameters>
      <param key="text" value="The talk made the crowd wary."/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>SUBADJPOST</expl>
<test id="eng.sa.27.1" trace=".sa.xml"
     comment=" rules-eng-homodeps-pass2.txt. La relation SUBADJPOST doit exister entre 'door' et 'green' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='wary']/dependents/dep[@t='SUBADJPOST']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.28" type="bloquant">
  <call-parameters>
      <param key="text" value="He chased the deer through the leafy woods. "/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>PREPSUB</expl>
<test id="eng.sa.28.1" trace=".sa.xml"
     comment=" rules-eng-homodeps-pass2.txt. La relation PREPSUB doit exister entre 'à travers' et 'lesquels' "
  left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='through']/dependents/dep[@t='PREPSUB']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.29" type="bloquant">
  <call-parameters>
      <param key="text" value="We have a photograph of John Hancock at our house."/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>PREPSUB</expl>
<test id="eng.sa.29.1" trace=".sa.xml"
     comment=" rules-eng-homodeps-pass2.txt. La relation PREPSUB ne doit pas exister entre 'of' et 'house' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='of']/dependents/dep[@v=3]"
    operator="notexists"
    right="" />
</testcase>
<testcase id="eng.sa.30" type="bloquant">
  <call-parameters>
      <param key="text" value="The cat of the neighbourood is fat and ugly."/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>PREPSUB</expl>
<test id="eng.sa.30.1" trace=".sa.xml"
     comment=" rules-eng-homodeps-pass2.txt. La relation PREPSUB doit exister entre 'cat' et 'neighbourood' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='of']/dependents/dep[@t='PREPSUB']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.35.a" type="bloquant">
  <expl> - contenu test modifié : l'ambiguite NC/Adj de little fait choisir une mauvaise interprétation en Freq ; remplacé par sombre</expl>
  <call-parameters>
      <param key="text" value="The dreary location is still for sale."/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
  </call-parameters>
<test id="eng.sa.35.1" trace=".sa.xml"
    comment=" rules-r2l-pass1-eng-homodeps.txt, AdjPrenSub : la chaine nominale 'sombre house' doit exister."
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='dreary']/dependents/dep[@t='ADJPRENSUB']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.35.b" type="bloquant">
  <call-parameters>
      <param key="text" value="The very beautiful tall location is for sale."/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>ADJPRENSUB</expl>
<test id="eng.sa.35.2" trace=".sa.xml"
    comment=" rules-r2l-pass1-eng-homodeps.txt, AdjPrenSub : la chaine nominale 'beautiful house' doit exister."
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='beautiful']/dependents/dep[@t='ADJPRENSUB']"
    operator="exists"
    right="" />
</testcase>
<testcase id="eng.sa.38" type="bloquant">
  <call-parameters>
      <param key="text" value="The birds on the beach are colorful."/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>article et substantifs forment une relation det.</expl>
  <test id="eng.sa.38.1" trace=".sa.xml"
    comment="La relation det doit exister entre 'The' et 'birds' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='The']/dependents/dep[@t='det']"
    operator="exists"
    right="" />
  <test id="eng.sa.38.2" trace=".sa.xml"
    comment="La relation det doit exister entre 'The' et 'birds' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='The']/dependents/dep[@t='det']/@v"
    operator="="
    right="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='birds']/@id" />
</testcase>
<testcase id="eng.sa.39" type="bloquant">
  <call-parameters>
      <param key="text" value="The engine protections are green."/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>Deux noms sucessifs sont relies par une relation de type ADJPRENSUB.</expl>
  <test id="eng.sa.39.1" trace=".sa.xml"
    comment="La relation COMPDUNOM doit exister entre 'covers' et 'engine' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='engine']/dependents/dep[@t='ADJPRENSUB']"
    operator="exists"
    right="" />
  <test id="eng.sa.39.2" trace=".sa.xml"
    comment="La relation COMPDUNOM doit exister entre 'covers' et 'engine' "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='engine']/dependents/dep[@t='ADJPRENSUB']/@v"
    operator="="
    right="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='protections']/@id" />
</testcase>
<testcase id="eng.sa.40" type="bloquant">
  <call-parameters>
      <param key="text" value="The birds on the sandy location are very small. "/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>Une relation de complementation doit exister entre birds et beach.</expl>
  <test id="eng.sa.40.1" trace=".sa.xml"
    comment="La relation type -COMPDUNOM-> 'birds' doit exister "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='location']/dependents/dep[@t='COMPDUNOM']"
    operator="exists"
    right="" />
  <test id="eng.sa.40.2" trace=".sa.xml"
    comment="La relation 'type' -COMPDUNOM-> 'birds' doit exister "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='location']/dependents/dep[@t='COMPDUNOM']/@v"
    operator="="
    right="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='birds']/@id" />
</testcase>
<testcase id="eng.sa.41" type="bloquant">
  <call-parameters>
      <param key="text" value="The birds on the sandy location are very small. "/>
      <param key="language" value="eng"/>
      <list key="pipelines">
        <item value="indexer"/>
        <item value="query"/>
      </list>
    </call-parameters>
  <expl>'very' modifie 'small'.</expl>
  <test id="eng.sa.41.1" trace=".sa.xml"
    comment="La relation 'very' -ADVADJ-> 'small' doit exister "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='very']/dependents/dep[@t='ADVADJ']"
    operator="exists"
    right="" />
  <test id="eng.sa.41.2" trace=".sa.xml"
    comment="La relation 'very' -ADVADJ-> 'small' doit exister "
    left="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='small']/@id"
    operator="contains"
    right="XPATH#//syntactic_analysis_dump/sentence/vertex[@form='very']/dependents/dep[@t='ADVADJ']/@v" />
</testcase>
</testcases>
